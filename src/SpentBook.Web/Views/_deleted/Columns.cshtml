@model SpentBook.Web.Models.PanelModel
@using DotNet.Highcharts.Helpers;
@using DotNet.Highcharts.Options;
@using DotNet.Highcharts.Attributes;
@using DotNet.Highcharts.Enums;
@using SpentBook.Web.Controllers;
@using System.Drawing;

@*@{
    var chartVarName = "chart_" + this.Model.Id.ToString().Replace("-", "");
    var chart = new DotNet.Highcharts.Highcharts(chartVarName)
            .InitChart(new DotNet.Highcharts.Options.Chart { Type = ChartTypes.Column })
            .SetOptions(new GlobalOptions()
            {
                Lang = new DotNet.Highcharts.Helpers.Lang
                {
                    ThousandsSep = ".",
                    DecimalPoint = ","
                }
            })
            .SetTitle(new Title { Text = Model.Title })
            //.SetXAxis(new XAxis { Type = AxisTypes.Category })
            .SetYAxis(new YAxis
            {
                Min = null,
                Title = new YAxisTitle { Text = "R$" }
            })
            .SetLegend(new Legend
            {
                Align = HorizontalAligns.Center,
                Y = 3,
                //LabelFormat = "<span style='color:{color}'>{name}</span>: {point.y}<br/>",
                //LabelFormatter = "function () { console.log(this.name, this.data); return this.name + this.data + ' a <br/> ( R$ ' + Highcharts.numberFormat(Enumerable.From(this.data).Sum('$.options.y')) + ')'; }",
                LabelFormatter = "function() { var count = 0; for (var i = 0 ; i < this.yData.length; i++) { count += this.yData[i]; } return this.name + ' (' + Highcharts.numberFormat(count) + ')'; }",
            })
            .SetTooltip(new Tooltip
            {
                //Formatter = @"function() { return 'R$' + this.y; }",
                HeaderFormat = "",
                PointFormat = "<span style='color:{series.color}'>\u25CF</span> {series.name}: <b>R$ {point.y:.2f}</b><br/>"
            })
            .SetExporting(new Exporting() { Enabled = true })
            .SetPlotOptions(new PlotOptions
            {
                Column = new PlotOptionsColumn
                {
                    PointPadding = 0.2,
                    BorderWidth = 0,
                    DataLabels = new PlotOptionsColumnDataLabels
                    {
                        Enabled = true,
                        Color = ColorTranslator.FromHtml("#000"),
                        Rotation = 270,
                        Align = HorizontalAligns.Left,
                        VerticalAlign = VerticalAligns.Middle,
                        //Formatter = @"function() { return this.series.name + ' = <span style=""transform: rotate(180deg);""> ' + this.y + '  </span>'; }",
                        Format = "{point.y:.2f}",
                        //Style = @"width: '20px'"
                    },
                }
            });
}*@

@*@(chart)*@

<div id='chart-@Model.Id-content'>

</div>

<script language="javascript">
    $(document).ready(function () {
        Highcharts.setOptions({ "lang": { "decimalPoint": ",", "thousandsSep": "." } });
        var chart = new Highcharts.Chart({
            chart: {
                renderTo: 'chart_@(@Model.Id)_container',
                "type": "column"
            },
            legend: {
                "align": "center",
                "labelFormatter": function () {
                    var count = 0;
                    for (var i = 0 ; i < this.yData.length; i++)
                    {
                        count += this.yData[i];
                    }
                    return this.name + ' (' + Highcharts.numberFormat(count) + ')';
                },
                "y": 3
            },
            plotOptions: {
                "column":
                    {
                        "borderWidth": 0,
                        "dataLabels": {
                            "align": "left",
                            "color": "#000000",
                            "enabled": true,
                            "format": "{point.y:.2f}",
                            "rotation": 270,
                            "verticalAlign": "middle"
                        },
                        "pointPadding": 0.2,
                        //point: {
                        //    events: {
                        //        click: function (e) {
                        //            var name = this.series.name;
                        //            var category = this.category;

                        //            //debugger;
                        //            var categories = [
                        //                "carro",
                        //            ];
                        //            var series = [{
                        //                "data": [20],
                        //                "id": "gasolina",
                        //                "name": "gasolina"
                        //            }];
                        //            setChart(chart, categories, series);
                        //        }
                        //    }
                        //}
                    }
            },
            title: {
                "text": null
            },
            tooltip: {
                "headerFormat": "",
                "pointFormat": "<span style='color:{series.color}'>\u25CF</span> {series.name} - {point.name}: <b>R$ {point.y:.2f}</b><br/>"
            },
            yAxis: {
                "title": {
                    "text": "R$"
                }
            },
            xAxis: {
                type: 'category',
            },
            exporting: {
                "enabled": true
            },
            drilldown: {
                drillUpButton: {
                    relativeTo: 'spacingBox',
                    position: {
                        y: 0,
                        x: 0
                    },
                    theme: {
                        fill: 'white',
                        'stroke-width': 1,
                        stroke: 'silver',
                        r: 0,
                        states: {
                            hover: {
                                fill: '#bada55'
                            },
                            select: {
                                stroke: '#039',
                                fill: '#bada55'
                            }
                        }
                    }

                }
            }
        });

        var addCategoriesTotal = function(chart) {
            var series = chart.series,
                axis = chart.xAxis[0],
                categories = axis.categories,
                cl = categories.length, 
                sl = series.length, 
                i = 0, j, sum;

            for (; i < cl; i++) {

                for(j=0, sum=0; j<sl; j++)
                    sum += series[j].data[i].y

                categories[i] += '<br/> <b>Total:</b> (' + Highcharts.numberFormat(sum) + ')';
            }

            //chart.setSize(chart.chartWidth, chart.chartHeight);
            chart.redraw();
        };

        var setChart = function (chartSet, categories, series, drilldown) {
            if (categories)
                chartSet.xAxis[0].setCategories(categories);

            while (chart.series.length > 0) {
                chart.series[0].remove(true);
            }

            for (var index in series) {
                chart.addSeries(series[index]);
            }


            if (chart.options.drilldown) {
                chart.options.drilldown.series = drilldown;
                //chart.options.drilldown.series = [{
                //    id: 'b',
                //    //name: 'teste',
                //    data: [
                //        ['Katten', 4],
                //        ['Honden', 2],
                //        ['Koeien', 1],
                //        ['Schapen', 2],
                //        ['Varkens', 1]
                //    ]
                //}, {
                //    id: 'bradesco',
                //    //name: 'teste2',
                //    data: [
                //        ['Appels', 4],
                //        ['Sinaasappels', 2]
                //    ]
                //}];
            }

            //addCategoriesTotal(chart);
        };

        var setTable = function (htmlTable) {
            $('.content-table').html(htmlTable);
            $('.tree').treegrid();
        };

        $.ajax({
            url: '/HighchartsData/Transactions',
            type: "GET",
            dataType: "json",
            data: { dashboardId: '@Model.Dashboard.Id', panelId: '@Model.Id', tryCategorize: true },
            success: function (json) {
                setChart(chart, json.Categories, json.Series, json.Drilldown);
                setTable(json.Table);
            },
            cache: false
        });
    });

</script>

<div class="content-table">

</div>